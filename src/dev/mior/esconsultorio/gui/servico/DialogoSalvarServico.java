package dev.mior.esconsultorio.gui.servico;

import dev.mior.esconsultorio.gui.produto.*;
import dev.mior.esconsultorio.dao.EntityDAO;
import dev.mior.esconsultorio.defaults.Defaults;
import dev.mior.esconsultorio.entity.Produto;
import dev.mior.esconsultorio.entity.Servico;
import dev.mior.esconsultorio.entity.TipoServico;
import dev.mior.esconsultorio.util.DialogUtil;
import dev.mior.esconsultorio.util.Logger;
import dev.mior.esconsultorio.util.Validar;
import java.awt.Frame;
import java.util.ArrayList;
import java.util.function.Consumer;
import javax.swing.JOptionPane;

/**
 *
 * @author Mior
 */
public class DialogoSalvarServico extends javax.swing.JDialog {

    /** User variables and constants */
    private Double valorProdutos = 0D;
    private Servico servico;
    private TipoServico tipoServico;
    private boolean cadastrar = false;
    private final Consumer<Servico> action;
    private static final EntityDAO<Servico> DAO = new EntityDAO<>(Servico.class);
    
    /**
     * Creates new form DialogoSalvarProduto
     * @param parent
     * @param modal
     * @param action
     */
    public DialogoSalvarServico(java.awt.Frame parent, boolean modal, Consumer<Servico> action) {
        super(parent, modal);
        this.action = action;
        this.cadastrar = true;
        initComponents();
        DialogUtil.addEscapeListener(this);
    }
    
    /**
     * Creates new form DialogoSalvarProduto
     * @param parent
     * @param modal
     * @param action
     * @param servico
     */
    public DialogoSalvarServico(java.awt.Frame parent, boolean modal, Consumer<Servico> action, Servico servico) {
        super(parent, modal);
        this.action = action;
        this.servico = servico;
        this.cadastrar = false;
        initComponents();
        initServico();
        DialogUtil.addEscapeListener(this);
    }
    
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        produtos = org.jdesktop.observablecollections.ObservableCollections.observableList(new ArrayList<>());
        jpConfirmar = new javax.swing.JPanel();
        jbtnSalvar = new javax.swing.JButton();
        jbtnCancelar = new javax.swing.JButton();
        jpProdutos = new javax.swing.JPanel();
        jpDescricao = new javax.swing.JPanel();
        jlProdutosUsadosNoServico = new javax.swing.JLabel();
        jpListaDeProdutos = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtProdutos = new javax.swing.JTable();
        jpAcoes = new javax.swing.JPanel();
        jbtnAdicionarProduto = new javax.swing.JButton();
        jbtnBuscarProduto = new javax.swing.JButton();
        jbtnRemoverProduto = new javax.swing.JButton();
        jpGeral = new javax.swing.JPanel();
        jlTipoDoServico = new javax.swing.JLabel();
        jlValor = new javax.swing.JLabel();
        jlDescricaoDoServico = new javax.swing.JLabel();
        jtfTipoServico = new javax.swing.JTextField();
        jtfValor = new javax.swing.JFormattedTextField();
        jbtnBuscarTipoServico = new javax.swing.JButton();
        jbtnNovoTipoServico = new javax.swing.JButton();
        jtfDescricao = new javax.swing.JTextField();
        jlValorProdutos = new javax.swing.JLabel();
        jtfValorProdutos = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle(cadastrar ? "Cadastrar Novo Serviço" : "Editar dados do Serviço");
        setBackground(new java.awt.Color(255, 255, 255));
        setName("dialogo"); // NOI18N
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jpConfirmar.setBackground(new java.awt.Color(255, 255, 255));
        jpConfirmar.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 30, 15));

        jbtnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/save.png"))); // NOI18N
        jbtnSalvar.setMnemonic('S');
        jbtnSalvar.setText("Salvar");
        jbtnSalvar.setFocusPainted(false);
        jbtnSalvar.setFocusable(false);
        jbtnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSalvarActionPerformed(evt);
            }
        });
        jpConfirmar.add(jbtnSalvar);

        jbtnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/cancel.png"))); // NOI18N
        jbtnCancelar.setMnemonic('C');
        jbtnCancelar.setText("Cancelar");
        jbtnCancelar.setFocusPainted(false);
        jbtnCancelar.setFocusable(false);
        jbtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCancelarActionPerformed(evt);
            }
        });
        jpConfirmar.add(jbtnCancelar);

        getContentPane().add(jpConfirmar, java.awt.BorderLayout.PAGE_END);

        jpProdutos.setBackground(new java.awt.Color(255, 255, 255));
        jpProdutos.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jpProdutos.setLayout(new java.awt.BorderLayout());

        jpDescricao.setBackground(new java.awt.Color(255, 255, 255));

        jlProdutosUsadosNoServico.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jlProdutosUsadosNoServico.setText("Produtos usados no serviço:");

        javax.swing.GroupLayout jpDescricaoLayout = new javax.swing.GroupLayout(jpDescricao);
        jpDescricao.setLayout(jpDescricaoLayout);
        jpDescricaoLayout.setHorizontalGroup(
            jpDescricaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDescricaoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlProdutosUsadosNoServico)
                .addContainerGap(317, Short.MAX_VALUE))
        );
        jpDescricaoLayout.setVerticalGroup(
            jpDescricaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDescricaoLayout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jlProdutosUsadosNoServico)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jpProdutos.add(jpDescricao, java.awt.BorderLayout.PAGE_START);

        jpListaDeProdutos.setBackground(new java.awt.Color(204, 0, 204));

        jtProdutos.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, produtos, jtProdutos);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create(" ${descricao}"));
        columnBinding.setColumnName("Descricao");
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create(" ${valor}"));
        columnBinding.setColumnName("Valor");
        columnBinding.setColumnClass(Double.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create(" ${tipoProduto}"));
        columnBinding.setColumnName("Tipo Produto");
        columnBinding.setEditable(false);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPane1.setViewportView(jtProdutos);
        if (jtProdutos.getColumnModel().getColumnCount() > 0) {
            jtProdutos.getColumnModel().getColumn(1).setMinWidth(85);
            jtProdutos.getColumnModel().getColumn(1).setPreferredWidth(85);
            jtProdutos.getColumnModel().getColumn(1).setMaxWidth(125);
            jtProdutos.getColumnModel().getColumn(1).setCellRenderer(new dev.mior.esconsultorio.gui.renderer.DinheiroRenderer());
        }

        javax.swing.GroupLayout jpListaDeProdutosLayout = new javax.swing.GroupLayout(jpListaDeProdutos);
        jpListaDeProdutos.setLayout(jpListaDeProdutosLayout);
        jpListaDeProdutosLayout.setHorizontalGroup(
            jpListaDeProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 524, Short.MAX_VALUE)
        );
        jpListaDeProdutosLayout.setVerticalGroup(
            jpListaDeProdutosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE)
        );

        jpProdutos.add(jpListaDeProdutos, java.awt.BorderLayout.CENTER);

        jpAcoes.setBackground(new java.awt.Color(255, 255, 255));
        jpAcoes.setForeground(new java.awt.Color(0, 153, 153));
        jpAcoes.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 30, 15));

        jbtnAdicionarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/add.png"))); // NOI18N
        jbtnAdicionarProduto.setMnemonic('A');
        jbtnAdicionarProduto.setText("Adicionar Produto");
        jbtnAdicionarProduto.setToolTipText("");
        jbtnAdicionarProduto.setFocusPainted(false);
        jbtnAdicionarProduto.setFocusable(false);
        jbtnAdicionarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnAdicionarProdutoActionPerformed(evt);
            }
        });
        jpAcoes.add(jbtnAdicionarProduto);

        jbtnBuscarProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/find.png"))); // NOI18N
        jbtnBuscarProduto.setMnemonic('B');
        jbtnBuscarProduto.setText("Buscar Produto");
        jbtnBuscarProduto.setFocusPainted(false);
        jbtnBuscarProduto.setFocusable(false);
        jbtnBuscarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBuscarProdutoActionPerformed(evt);
            }
        });
        jpAcoes.add(jbtnBuscarProduto);

        jbtnRemoverProduto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/delete.png"))); // NOI18N
        jbtnRemoverProduto.setMnemonic('R');
        jbtnRemoverProduto.setText("Remover Produto");
        jbtnRemoverProduto.setFocusPainted(false);
        jbtnRemoverProduto.setFocusable(false);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jtProdutos, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jbtnRemoverProduto, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jbtnRemoverProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnRemoverProdutoActionPerformed(evt);
            }
        });
        jpAcoes.add(jbtnRemoverProduto);

        jpProdutos.add(jpAcoes, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(jpProdutos, java.awt.BorderLayout.CENTER);

        jpGeral.setBackground(new java.awt.Color(255, 255, 255));

        jlTipoDoServico.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jlTipoDoServico.setText("Tipo do Serviço:");

        jlValor.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jlValor.setText("Valor:");

        jlDescricaoDoServico.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jlDescricaoDoServico.setText("Descrição do Serviço:");

        jtfTipoServico.setEditable(false);
        jtfTipoServico.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfTipoServico.setToolTipText("Tipo do Serviço");
        jtfTipoServico.setMargin(new java.awt.Insets(2, 1, 2, 1));

        jtfValor.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        jtfValor.setToolTipText("Valor do Serviço");
        jtfValor.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfValor.setMargin(new java.awt.Insets(2, 1, 2, 1));
        jtfValor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jtfValorKeyTyped(evt);
            }
        });

        jbtnBuscarTipoServico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/find.png"))); // NOI18N
        jbtnBuscarTipoServico.setToolTipText("Buscar Tipo de Serviço Cadastrado");
        jbtnBuscarTipoServico.setFocusPainted(false);
        jbtnBuscarTipoServico.setFocusable(false);
        jbtnBuscarTipoServico.setMargin(new java.awt.Insets(2, 4, 1, 4));
        jbtnBuscarTipoServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnBuscarTipoServicoActionPerformed(evt);
            }
        });

        jbtnNovoTipoServico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/add.png"))); // NOI18N
        jbtnNovoTipoServico.setToolTipText("Cadastrar Novo Tipo de Serviço");
        jbtnNovoTipoServico.setFocusPainted(false);
        jbtnNovoTipoServico.setFocusable(false);
        jbtnNovoTipoServico.setMargin(new java.awt.Insets(2, 4, 1, 4));
        jbtnNovoTipoServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnNovoTipoServicoActionPerformed(evt);
            }
        });

        jtfDescricao.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfDescricao.setToolTipText("Descrição do Serviço");
        jtfDescricao.setMargin(new java.awt.Insets(2, 1, 2, 1));

        jlValorProdutos.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jlValorProdutos.setText("Valor Produtos:");

        jtfValorProdutos.setEditable(false);
        jtfValorProdutos.setToolTipText("Valor Total dos Produtos do Serviço");
        jtfValorProdutos.setMargin(new java.awt.Insets(2, 1, 2, 1));

        javax.swing.GroupLayout jpGeralLayout = new javax.swing.GroupLayout(jpGeral);
        jpGeral.setLayout(jpGeralLayout);
        jpGeralLayout.setHorizontalGroup(
            jpGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpGeralLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jpGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpGeralLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jlValorProdutos)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfValorProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(jpGeralLayout.createSequentialGroup()
                            .addGroup(jpGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jlValor)
                                .addComponent(jlTipoDoServico))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jpGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jpGeralLayout.createSequentialGroup()
                                    .addComponent(jtfTipoServico, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jbtnBuscarTipoServico)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jbtnNovoTipoServico))
                                .addComponent(jtfValor, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(jlDescricaoDoServico)
                        .addComponent(jtfDescricao)))
                .addContainerGap(150, Short.MAX_VALUE))
        );
        jpGeralLayout.setVerticalGroup(
            jpGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpGeralLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jpGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jbtnBuscarTipoServico, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jlTipoDoServico)
                        .addComponent(jtfTipoServico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbtnNovoTipoServico)))
                .addGap(18, 18, 18)
                .addGroup(jpGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlValor)
                    .addComponent(jtfValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jlDescricaoDoServico)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jpGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jlValorProdutos)
                    .addComponent(jtfValorProdutos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        getContentPane().add(jpGeral, java.awt.BorderLayout.PAGE_START);

        bindingGroup.bind();

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void initServico() {
        if (servico != null) {
            tipoServico = servico.getTipoServico();
            valorProdutos = servico.getValorProdutos();
            jtfTipoServico.setText(tipoServico.getDescricao());
            jtfValor.setText(String.valueOf(servico.getValor()));
            jtfDescricao.setText(servico.getDescricao());
            produtos.addAll(servico.getProdutos());
            jtfValorProdutos.setText(Defaults.M_FORMAT.format(valorProdutos));
        }
    }
        
    private boolean camposEstaoVazios() {
        String descricao = jtfDescricao.getText().replace(" ", "");
        String valor = jtfValor.getText().replace(" ", "");
        return cadastrar && tipoServico == null && descricao.isEmpty() && valor.isEmpty();
    }
    
    private void showQuitDialog() {
        String mensagem = cadastrar ? "Você realmente deseja cancelar o cadastro do serviço?" : "Você realmente deseja cancelar a edição dos dados do serviço?";
        if (camposEstaoVazios() || JOptionPane.showConfirmDialog(this, mensagem, "Confirmação", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
            this.dispose();
        }
    }
    
    private void jbtnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCancelarActionPerformed
        showQuitDialog();
    }//GEN-LAST:event_jbtnCancelarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        showQuitDialog();
    }//GEN-LAST:event_formWindowClosing

    private void jbtnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSalvarActionPerformed
        String valor = jtfValor.getText().trim().replace(",", ".");
        String descricao = jtfDescricao.getText().trim();
        
        if (servico == null) {
            servico = new Servico();
        }

        if (tipoServico == null) {
            JOptionPane.showMessageDialog(this, "Você deve informar o tipo do serviço!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        } else {
            servico.setTipoServico(tipoServico);
        }
        
        if (valor.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Você deve informar o valor do serviço!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (!Validar.numero(valor) || Double.parseDouble(valor) < 0) {
            JOptionPane.showMessageDialog(this, "O valor informado do serviço não é valido!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        } else {
            servico.setValor(Double.parseDouble(valor));
        }
        
        if (descricao.length() < 3) {
            JOptionPane.showMessageDialog(this, "Você deve informar a descrição do serviço!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        } else if ((cadastrar || (servico.getDescricao() != null && !servico.getDescricao().equals(descricao))) && DAO.findEntityByColumn("descricao", descricao) != null) {
            JOptionPane.showMessageDialog(this, "Um serviço já foi cadastrado com esta descrição!", "Erro", JOptionPane.ERROR_MESSAGE);
            return; 
        } else {
            servico.setDescricao(descricao);
        }
        
        if (produtos != null) {
            servico.setProdutos(produtos);
        }
                
        try {
            if (cadastrar) {
                DAO.create(servico);
                JOptionPane.showMessageDialog(this, "Serviço cadastrado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            } else {
                DAO.edit(servico);
                JOptionPane.showMessageDialog(this, "Dados do serviço editados com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            }
            if (action != null) {
                action.accept(servico);
            }
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao tentar salvar o serviço!", "Erro Desconhecido", JOptionPane.ERROR_MESSAGE);
            Logger.save(e);
        }
    }//GEN-LAST:event_jbtnSalvarActionPerformed

    private void jbtnNovoTipoServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnNovoTipoServicoActionPerformed
        new DialogoSalvarTipoServico((Frame) getParent(), true, (ts) -> {
            this.tipoServico = ts;
            this.jtfTipoServico.setText(ts.getDescricao());
        }).setVisible(true);
    }//GEN-LAST:event_jbtnNovoTipoServicoActionPerformed

    private void jbtnBuscarTipoServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBuscarTipoServicoActionPerformed
        new DialogoBuscarTipoServico((Frame) getParent(), true, (ts) -> {
            this.tipoServico = ts;
            this.jtfTipoServico.setText(ts.getDescricao());
        }).setVisible(true);
    }//GEN-LAST:event_jbtnBuscarTipoServicoActionPerformed

    private void jtfValorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jtfValorKeyTyped
        if (!Character.isDigit(evt.getKeyChar()) && evt.getKeyChar() != '.' && evt.getKeyChar() != ',') {
            evt.consume();
        }
    }//GEN-LAST:event_jtfValorKeyTyped

    private void jbtnAdicionarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnAdicionarProdutoActionPerformed
        new DialogoSalvarProduto((Frame) getParent(), true, (p) -> {
            if (!produtos.contains(p)) {
                produtos.add(p);
                valorProdutos += p.getValor();
                jtfValorProdutos.setText(Defaults.M_FORMAT.format(valorProdutos));
            }
        }).setVisible(true);
    }//GEN-LAST:event_jbtnAdicionarProdutoActionPerformed

    private void jbtnRemoverProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnRemoverProdutoActionPerformed
        Produto p = produtos.get(jtProdutos.getSelectedRow());
        valorProdutos -= p.getValor();
        jtfValorProdutos.setText(Defaults.M_FORMAT.format(valorProdutos));
        produtos.remove(jtProdutos.getSelectedRow());
    }//GEN-LAST:event_jbtnRemoverProdutoActionPerformed

    private void jbtnBuscarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnBuscarProdutoActionPerformed
        new DialogoBuscarProduto((Frame) getParent(), true, (p) -> {
            if (!produtos.contains(p)) {
                produtos.add(p);
                valorProdutos += p.getValor();
                jtfValorProdutos.setText(Defaults.M_FORMAT.format(valorProdutos));
            }
        }).setVisible(true);
    }//GEN-LAST:event_jbtnBuscarProdutoActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton jbtnAdicionarProduto;
    private javax.swing.JButton jbtnBuscarProduto;
    private javax.swing.JButton jbtnBuscarTipoServico;
    private javax.swing.JButton jbtnCancelar;
    private javax.swing.JButton jbtnNovoTipoServico;
    private javax.swing.JButton jbtnRemoverProduto;
    private javax.swing.JButton jbtnSalvar;
    private javax.swing.JLabel jlDescricaoDoServico;
    private javax.swing.JLabel jlProdutosUsadosNoServico;
    private javax.swing.JLabel jlTipoDoServico;
    private javax.swing.JLabel jlValor;
    private javax.swing.JLabel jlValorProdutos;
    private javax.swing.JPanel jpAcoes;
    private javax.swing.JPanel jpConfirmar;
    private javax.swing.JPanel jpDescricao;
    private javax.swing.JPanel jpGeral;
    private javax.swing.JPanel jpListaDeProdutos;
    private javax.swing.JPanel jpProdutos;
    private javax.swing.JTable jtProdutos;
    private javax.swing.JTextField jtfDescricao;
    private javax.swing.JTextField jtfTipoServico;
    private javax.swing.JFormattedTextField jtfValor;
    private javax.swing.JTextField jtfValorProdutos;
    private java.util.List<Produto> produtos;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables

}