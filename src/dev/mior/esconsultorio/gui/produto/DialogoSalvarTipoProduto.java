package dev.mior.esconsultorio.gui.produto;

import dev.mior.esconsultorio.dao.EntityDAO;
import dev.mior.esconsultorio.entity.TipoProduto;
import dev.mior.esconsultorio.util.DialogUtil;
import dev.mior.esconsultorio.util.Logger;
import java.util.function.Consumer;
import javax.swing.JOptionPane;

/**
 *
 * @author Mior
 */
public class DialogoSalvarTipoProduto extends javax.swing.JDialog {

    /** User variables and constants */
    private TipoProduto tipoProduto;
    private boolean cadastrar = false;
    private final Consumer<TipoProduto> action;
    private static final EntityDAO<TipoProduto> DAO = new EntityDAO<>(TipoProduto.class);
    
    /**
     * Creates new form DialogoSalvarTipoProduto
     * @param parent
     * @param modal
     * @param action
     */
    public DialogoSalvarTipoProduto(java.awt.Frame parent, boolean modal, Consumer<TipoProduto> action) {
        super(parent, modal);
        this.action = action;
        this.cadastrar = true;
        initComponents();
        DialogUtil.addEscapeListener(this);
    }

    /**
     * Creates new form DialogoSalvarTipoProduto
     * @param parent
     * @param modal
     * @param action
     * @param tipoProduto
     */
    public DialogoSalvarTipoProduto(java.awt.Frame parent, boolean modal, Consumer<TipoProduto> action, TipoProduto tipoProduto) {
        super(parent, modal);
        this.action = action;
        this.cadastrar = false;
        this.tipoProduto = tipoProduto;
        initComponents();
        initTipoProduto();
        DialogUtil.addEscapeListener(this);
    }
    
    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jpConfirmar = new javax.swing.JPanel();
        jbtnSalvar = new javax.swing.JButton();
        jbtnCancelar = new javax.swing.JButton();
        jpGeral = new javax.swing.JPanel();
        jlDescricaoDoTipoDoProduto = new javax.swing.JLabel();
        jtfDescricao = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle(cadastrar ? "Cadastrar Novo Tipo do Produto" : "Editar dados do Tipo do Produto");
        setBackground(new java.awt.Color(255, 255, 255));
        setName("dialogo"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jpConfirmar.setBackground(new java.awt.Color(255, 255, 255));
        jpConfirmar.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.CENTER, 30, 20));

        jbtnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/save.png"))); // NOI18N
        jbtnSalvar.setMnemonic('S');
        jbtnSalvar.setText("Salvar");
        jbtnSalvar.setFocusable(false);
        jbtnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnSalvarActionPerformed(evt);
            }
        });
        jpConfirmar.add(jbtnSalvar);

        jbtnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/cancel.png"))); // NOI18N
        jbtnCancelar.setMnemonic('C');
        jbtnCancelar.setText("Cancelar");
        jbtnCancelar.setFocusable(false);
        jbtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnCancelarActionPerformed(evt);
            }
        });
        jpConfirmar.add(jbtnCancelar);

        getContentPane().add(jpConfirmar, java.awt.BorderLayout.PAGE_END);

        jpGeral.setBackground(new java.awt.Color(255, 255, 255));

        jlDescricaoDoTipoDoProduto.setFont(new java.awt.Font("Arial", 0, 16)); // NOI18N
        jlDescricaoDoTipoDoProduto.setText("Descrição do tipo do produto:");

        jtfDescricao.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jtfDescricao.setToolTipText("Descrição do tipo do produto");
        jtfDescricao.setMargin(new java.awt.Insets(2, 1, 2, 1));

        javax.swing.GroupLayout jpGeralLayout = new javax.swing.GroupLayout(jpGeral);
        jpGeral.setLayout(jpGeralLayout);
        jpGeralLayout.setHorizontalGroup(
            jpGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpGeralLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jpGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jtfDescricao)
                    .addGroup(jpGeralLayout.createSequentialGroup()
                        .addComponent(jlDescricaoDoTipoDoProduto)
                        .addGap(0, 161, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jpGeralLayout.setVerticalGroup(
            jpGeralLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpGeralLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jlDescricaoDoTipoDoProduto)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jtfDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        getContentPane().add(jpGeral, java.awt.BorderLayout.CENTER);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void initTipoProduto() {
        if (tipoProduto != null)
            jtfDescricao.setText(tipoProduto.getDescricao());
    }
    
    private void showQuitDialog() {
        String mensagem = cadastrar ? "Você realmente deseja cancelar o cadastro do tipo do produto?" : "Você realmente deseja cancelar a edição do Tipo do Produto?";
        if (jtfDescricao.getText().isEmpty() || JOptionPane.showConfirmDialog(this, mensagem, "Confirmação", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
            this.dispose();
        }
    }
    
    private void jbtnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnSalvarActionPerformed
        String descricao = jtfDescricao.getText();
        
        if (cadastrar) {
            tipoProduto = new TipoProduto();
        }
        
        if (descricao.length() < 5) {
            JOptionPane.showMessageDialog(this, "Você deve informar a descrição do tipo do produto!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        } else if ((cadastrar || (tipoProduto.getDescricao() != null && !tipoProduto.getDescricao().equals(descricao))) && DAO.findEntityByColumn("descricao", descricao) != null) {
            JOptionPane.showMessageDialog(this, "Um tipo de produto já foi cadastrado com esta descrição!", "Erro", JOptionPane.ERROR_MESSAGE);
            return; 
        } else {
            tipoProduto.setDescricao(descricao);
        }
                     
        try {
            if (cadastrar) {
                DAO.create(tipoProduto);
                JOptionPane.showMessageDialog(this, "Tipo de produto cadastrado com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            } else {
                DAO.edit(tipoProduto);
                JOptionPane.showMessageDialog(this, "Dados do tipo de produto editados com sucesso!", "Sucesso", JOptionPane.INFORMATION_MESSAGE);
            }
            if (action != null) {
                action.accept(tipoProduto);
            }
            this.dispose();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao tentar salvar o tipo de produto!", "Erro Desconhecido", JOptionPane.ERROR_MESSAGE);
            Logger.save(e);
        }
    }//GEN-LAST:event_jbtnSalvarActionPerformed

    private void jbtnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnCancelarActionPerformed
        showQuitDialog();
    }//GEN-LAST:event_jbtnCancelarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        showQuitDialog();
    }//GEN-LAST:event_formWindowClosing

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jbtnCancelar;
    private javax.swing.JButton jbtnSalvar;
    private javax.swing.JLabel jlDescricaoDoTipoDoProduto;
    private javax.swing.JPanel jpConfirmar;
    private javax.swing.JPanel jpGeral;
    private javax.swing.JTextField jtfDescricao;
    // End of variables declaration//GEN-END:variables

}