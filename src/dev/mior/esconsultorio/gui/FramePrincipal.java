package dev.mior.esconsultorio.gui;

import dev.mior.esconsultorio.dao.EntityDAO;
import dev.mior.esconsultorio.entity.Consulta;
import dev.mior.esconsultorio.gui.cliente.DialogoGerenciarClientes;
import dev.mior.esconsultorio.gui.cliente.DialogoConultarHistoricoDoCliente;
import dev.mior.esconsultorio.gui.cliente.DialogoSalvarCliente;
import dev.mior.esconsultorio.gui.consulta.DialogoGerenciarConsultas;
import dev.mior.esconsultorio.gui.consulta.DialogoSalvarConsulta;
import dev.mior.esconsultorio.gui.consulta.DialogoVisualizarConsulta;
import dev.mior.esconsultorio.gui.produto.DialogoGerenciarProdutos;
import dev.mior.esconsultorio.gui.produto.DialogoGerenciarTiposProdutos;
import dev.mior.esconsultorio.gui.produto.DialogoSalvarProduto;
import dev.mior.esconsultorio.gui.renderer.CalendarioRenderer;
import dev.mior.esconsultorio.gui.produto.DialogoSalvarTipoProduto;
import dev.mior.esconsultorio.gui.servico.DialogoGerenciarServicos;
import dev.mior.esconsultorio.gui.servico.DialogoGerenciarTiposServicos;
import dev.mior.esconsultorio.gui.servico.DialogoSalvarServico;
import dev.mior.esconsultorio.gui.servico.DialogoSalvarTipoServico;
import dev.mior.esconsultorio.util.Logger;
import java.awt.Font;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Collections;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Locale;
import javax.swing.JOptionPane;

/**
 *
 * @author Mior
 */
public class FramePrincipal extends javax.swing.JFrame {

    /** User variables and constants */
    private CalendarioRenderer calendarRenderer;
    private int realYear, realMonth, realDay, currentYear, currentMonth;
    private Object pressedValue, releasedValue;
    private static final EntityDAO<Consulta> DAO = new EntityDAO<>(Consulta.class);
    private static final String[] MONTHS =  {"Janeiro", "Fevereiro", "Mar√ßo", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro"};
    
    /** Creates new form NewApplication */
    public FramePrincipal() {
        initComponents();
        initCalendar();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        entityManager = EntityDAO.EMF.createEntityManager();
        queryConsultas = java.beans.Beans.isDesignTime() ? null : entityManager.createQuery("SELECT c FROM Consulta c ORDER BY c.horaInicial");
        consultas = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : org.jdesktop.observablecollections.ObservableCollections.observableList(queryConsultas.getResultList());
        consultasDoDia = org.jdesktop.observablecollections.ObservableCollections.observableList(new ArrayList<>());
        jpConsultasDoDia = new javax.swing.JPanel();
        jpBotoesSuperiores = new javax.swing.JPanel();
        jbtnNovaConsulta = new javax.swing.JButton();
        jbtnEditar = new javax.swing.JButton();
        jbtnExcluir = new javax.swing.JButton();
        jbtnInfo = new javax.swing.JButton();
        jScrollPaneConsultas = new javax.swing.JScrollPane();
        jtConsultas = new javax.swing.JTable();
        jpGeral = new javax.swing.JPanel();
        jpMesDoCalendario = new javax.swing.JPanel();
        jlMes = new javax.swing.JLabel();
        jbtnProximoMes = new javax.swing.JButton(">");
        jbtnMesAnterior = new javax.swing.JButton("<");
        jbtnHoje = new javax.swing.JButton();
        jpBotoesLaterais = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jpCalendario = new javax.swing.JPanel();
        jScrollPaneCalendario = new javax.swing.JScrollPane();
        jtCalendario = new javax.swing.JTable();
        menuBar = new javax.swing.JMenuBar();
        menuArquivo = new javax.swing.JMenu();
        jmiConfiguracoesDoConsultorio = new javax.swing.JMenuItem();
        jSeparador1 = new javax.swing.JPopupMenu.Separator();
        jmiSair = new javax.swing.JMenuItem();
        menuClientes = new javax.swing.JMenu();
        jmiConsultarCliente = new javax.swing.JMenuItem();
        jmiCadastrarCliente = new javax.swing.JMenuItem();
        jmiConsultaCliente = new javax.swing.JMenuItem();
        menuConsultas = new javax.swing.JMenu();
        jmiGerenciarConsultas = new javax.swing.JMenuItem();
        jmiCadastrarConsulta = new javax.swing.JMenuItem();
        menuServicosEProdutos = new javax.swing.JMenu();
        menuServicos = new javax.swing.JMenu();
        jmiCadastrarServico = new javax.swing.JMenuItem();
        jmiGerenciarServicos = new javax.swing.JMenuItem();
        jmiCadastrarTipoServico = new javax.swing.JMenuItem();
        jmiGerenciarTiposServicos = new javax.swing.JMenuItem();
        menuProdutos = new javax.swing.JMenu();
        jmiCadastrarProduto = new javax.swing.JMenuItem();
        jmiGerenciarProdutos = new javax.swing.JMenuItem();
        jmiCadastrarTipoProduto = new javax.swing.JMenuItem();
        jmiGerenciarTiposProdutos = new javax.swing.JMenuItem();
        menuAjuda = new javax.swing.JMenu();
        jmiSobre = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle(dev.mior.esconsultorio.defaults.Defaults.NAME);
        setExtendedState(6);
        setIconImage(dev.mior.esconsultorio.defaults.Defaults.ICON);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jpConsultasDoDia.setBackground(new java.awt.Color(51, 51, 51));
        jpConsultasDoDia.setPreferredSize(new java.awt.Dimension(250, 580));
        jpConsultasDoDia.setLayout(new java.awt.BorderLayout());

        jpBotoesSuperiores.setBackground(new java.awt.Color(255, 255, 255));
        jpBotoesSuperiores.setMinimumSize(new java.awt.Dimension(100, 75));
        jpBotoesSuperiores.setPreferredSize(new java.awt.Dimension(250, 75));

        jbtnNovaConsulta.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/add.png"))); // NOI18N
        jbtnNovaConsulta.setText("Nova Consulta");
        jbtnNovaConsulta.setFocusable(false);
        jbtnNovaConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnNovaConsultaActionPerformed(evt);
            }
        });

        jbtnEditar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/edit.png"))); // NOI18N
        jbtnEditar.setText("Editar");
        jbtnEditar.setFocusable(false);
        jbtnEditar.setMargin(new java.awt.Insets(2, 9, 2, 9));

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jtConsultas, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jbtnEditar, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jbtnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnEditarActionPerformed(evt);
            }
        });

        jbtnExcluir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/delete.png"))); // NOI18N
        jbtnExcluir.setText("Excluir");
        jbtnExcluir.setFocusable(false);
        jbtnExcluir.setMargin(new java.awt.Insets(2, 9, 2, 9));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jtConsultas, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jbtnExcluir, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jbtnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnExcluirActionPerformed(evt);
            }
        });

        jbtnInfo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/info.png"))); // NOI18N
        jbtnInfo.setText("Info");
        jbtnInfo.setFocusable(false);
        jbtnInfo.setMargin(new java.awt.Insets(2, 9, 2, 9));

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, jtConsultas, org.jdesktop.beansbinding.ELProperty.create("${selectedElement != null}"), jbtnInfo, org.jdesktop.beansbinding.BeanProperty.create("enabled"));
        bindingGroup.addBinding(binding);

        jbtnInfo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnInfoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpBotoesSuperioresLayout = new javax.swing.GroupLayout(jpBotoesSuperiores);
        jpBotoesSuperiores.setLayout(jpBotoesSuperioresLayout);
        jpBotoesSuperioresLayout.setHorizontalGroup(
            jpBotoesSuperioresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBotoesSuperioresLayout.createSequentialGroup()
                .addGroup(jpBotoesSuperioresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpBotoesSuperioresLayout.createSequentialGroup()
                        .addComponent(jbtnEditar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jbtnInfo))
                    .addGroup(jpBotoesSuperioresLayout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addComponent(jbtnNovaConsulta)))
                .addContainerGap(9, Short.MAX_VALUE))
        );
        jpBotoesSuperioresLayout.setVerticalGroup(
            jpBotoesSuperioresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpBotoesSuperioresLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jbtnNovaConsulta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpBotoesSuperioresLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jbtnEditar)
                    .addComponent(jbtnExcluir)
                    .addComponent(jbtnInfo))
                .addContainerGap(8, Short.MAX_VALUE))
        );

        jpConsultasDoDia.add(jpBotoesSuperiores, java.awt.BorderLayout.PAGE_START);

        jtConsultas.setEnabled(false);
        jtConsultas.setFocusable(false);
        jtConsultas.setRowHeight(25);
        jtConsultas.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jtConsultas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jtConsultas.getTableHeader().setReorderingAllowed(false);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, consultasDoDia, jtConsultas);
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${horaInicial}"));
        columnBinding.setColumnName("Hor√°rio");
        columnBinding.setColumnClass(java.util.Date.class);
        columnBinding.setEditable(false);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create(" ${cliente}"));
        columnBinding.setColumnName("Cliente");
        columnBinding.setEditable(false);
        jTableBinding.setSourceNullValue(null);
        jTableBinding.setSourceUnreadableValue(null);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jScrollPaneConsultas.setViewportView(jtConsultas);
        if (jtConsultas.getColumnModel().getColumnCount() > 0) {
            jtConsultas.getColumnModel().getColumn(0).setMinWidth(65);
            jtConsultas.getColumnModel().getColumn(0).setPreferredWidth(80);
            jtConsultas.getColumnModel().getColumn(0).setMaxWidth(80);
            jtConsultas.getColumnModel().getColumn(0).setCellRenderer(new dev.mior.esconsultorio.gui.renderer.HorarioRenderer());
        }

        jpConsultasDoDia.add(jScrollPaneConsultas, java.awt.BorderLayout.CENTER);

        getContentPane().add(jpConsultasDoDia, java.awt.BorderLayout.LINE_END);

        jpGeral.setLayout(new java.awt.BorderLayout());

        jpMesDoCalendario.setBackground(new java.awt.Color(255, 255, 255));
        jpMesDoCalendario.setMinimumSize(new java.awt.Dimension(100, 75));
        jpMesDoCalendario.setPreferredSize(new java.awt.Dimension(656, 75));

        jlMes.setFont(new Font("Arial", Font.PLAIN, 30));
        jlMes.setForeground(new java.awt.Color(51, 51, 51));
        jlMes.setText("Julho de 2019");
        jlMes.setToolTipText("M√™s atual");

        jbtnProximoMes.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jbtnProximoMes.setToolTipText("Pr√≥ximo m√™s");
        jbtnProximoMes.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnProximoMes.setFocusable(false);
        jbtnProximoMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnProximoMesActionPerformed(evt);
            }
        });

        jbtnMesAnterior.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jbtnMesAnterior.setToolTipText("M√™s anterior");
        jbtnMesAnterior.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnMesAnterior.setFocusable(false);
        jbtnMesAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnMesAnteriorActionPerformed(evt);
            }
        });

        jbtnHoje.setFont(new java.awt.Font("Arial", 0, 11)); // NOI18N
        jbtnHoje.setText("HOJE");
        jbtnHoje.setToolTipText("Dia atual");
        jbtnHoje.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jbtnHoje.setFocusable(false);
        jbtnHoje.setMaximumSize(new java.awt.Dimension(35, 9));
        jbtnHoje.setMinimumSize(new java.awt.Dimension(35, 9));
        jbtnHoje.setPreferredSize(new java.awt.Dimension(35, 9));
        jbtnHoje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtnHojeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpMesDoCalendarioLayout = new javax.swing.GroupLayout(jpMesDoCalendario);
        jpMesDoCalendario.setLayout(jpMesDoCalendarioLayout);
        jpMesDoCalendarioLayout.setHorizontalGroup(
            jpMesDoCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMesDoCalendarioLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jlMes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 102, Short.MAX_VALUE)
                .addComponent(jbtnMesAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jbtnHoje, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jbtnProximoMes, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84))
        );
        jpMesDoCalendarioLayout.setVerticalGroup(
            jpMesDoCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpMesDoCalendarioLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jpMesDoCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jpMesDoCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jbtnProximoMes, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jbtnMesAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jlMes)
                    .addComponent(jbtnHoje, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34))
        );

        jpGeral.add(jpMesDoCalendario, java.awt.BorderLayout.PAGE_START);

        jpBotoesLaterais.setBackground(new java.awt.Color(255, 255, 255));
        jpBotoesLaterais.setLayout(new java.awt.GridLayout(6, 1));
        jpBotoesLaterais.add(jButton1);
        jpBotoesLaterais.add(jButton2);
        jpBotoesLaterais.add(jButton3);
        jpBotoesLaterais.add(jButton4);
        jpBotoesLaterais.add(jButton5);
        jpBotoesLaterais.add(jButton6);

        jpGeral.add(jpBotoesLaterais, java.awt.BorderLayout.LINE_START);

        jpCalendario.setBackground(new java.awt.Color(255, 255, 255));

        jtCalendario.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jtCalendario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Domingo", "Segunda", "Ter√ßa", "Quarta", "Quinta", "Sexta", "S√°bado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtCalendario.setColumnSelectionAllowed(true);
        jtCalendario.setFocusable(false);
        jtCalendario.setGridColor(new java.awt.Color(204, 204, 204));
        jtCalendario.setRowHeight(97);
        jtCalendario.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jtCalendario.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jtCalendario.getTableHeader().setReorderingAllowed(false);
        jtCalendario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jtCalendarioMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jtCalendarioMouseReleased(evt);
            }
        });
        jScrollPaneCalendario.setViewportView(jtCalendario);
        jtCalendario.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jtCalendario.getColumnModel().getColumnCount() > 0) {
            jtCalendario.getColumnModel().getColumn(0).setResizable(false);
            jtCalendario.getColumnModel().getColumn(1).setResizable(false);
            jtCalendario.getColumnModel().getColumn(2).setResizable(false);
            jtCalendario.getColumnModel().getColumn(3).setResizable(false);
            jtCalendario.getColumnModel().getColumn(4).setResizable(false);
            jtCalendario.getColumnModel().getColumn(5).setResizable(false);
            jtCalendario.getColumnModel().getColumn(6).setResizable(false);
        }

        javax.swing.GroupLayout jpCalendarioLayout = new javax.swing.GroupLayout(jpCalendario);
        jpCalendario.setLayout(jpCalendarioLayout);
        jpCalendarioLayout.setHorizontalGroup(
            jpCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneCalendario, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 664, Short.MAX_VALUE)
        );
        jpCalendarioLayout.setVerticalGroup(
            jpCalendarioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPaneCalendario, javax.swing.GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE)
        );

        jpGeral.add(jpCalendario, java.awt.BorderLayout.CENTER);

        getContentPane().add(jpGeral, java.awt.BorderLayout.CENTER);

        menuArquivo.setMnemonic('A');
        menuArquivo.setText("Arquivo");

        jmiConfiguracoesDoConsultorio.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/settings.png"))); // NOI18N
        jmiConfiguracoesDoConsultorio.setMnemonic('C');
        jmiConfiguracoesDoConsultorio.setText("Configura√ß√µes do Consult√≥rio");
        menuArquivo.add(jmiConfiguracoesDoConsultorio);
        menuArquivo.add(jSeparador1);

        jmiSair.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        jmiSair.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/logout.png"))); // NOI18N
        jmiSair.setMnemonic('S');
        jmiSair.setText("Sair");
        jmiSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSairActionPerformed(evt);
            }
        });
        menuArquivo.add(jmiSair);

        menuBar.add(menuArquivo);

        menuClientes.setMnemonic('C');
        menuClientes.setText("Clientes");

        jmiConsultarCliente.setText("Gerenciar Clientes");
        jmiConsultarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiConsultarClienteActionPerformed(evt);
            }
        });
        menuClientes.add(jmiConsultarCliente);

        jmiCadastrarCliente.setText("Cadastrar Cliente");
        jmiCadastrarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCadastrarClienteActionPerformed(evt);
            }
        });
        menuClientes.add(jmiCadastrarCliente);

        jmiConsultaCliente.setText("Consultar Hist√≥rico do Cliente");
        jmiConsultaCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiConsultaClienteActionPerformed(evt);
            }
        });
        menuClientes.add(jmiConsultaCliente);

        menuBar.add(menuClientes);

        menuConsultas.setMnemonic('C');
        menuConsultas.setText("Consultas");

        jmiGerenciarConsultas.setText("Gerenciar Consultas");
        jmiGerenciarConsultas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiGerenciarConsultasActionPerformed(evt);
            }
        });
        menuConsultas.add(jmiGerenciarConsultas);

        jmiCadastrarConsulta.setText("Cadastrar Consulta");
        jmiCadastrarConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCadastrarConsultaActionPerformed(evt);
            }
        });
        menuConsultas.add(jmiCadastrarConsulta);

        menuBar.add(menuConsultas);

        menuServicosEProdutos.setText("Servi√ßos e Produtos");

        menuServicos.setText("Servi√ßos");

        jmiCadastrarServico.setText("Cadastrar Servi√ßo");
        jmiCadastrarServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCadastrarServicoActionPerformed(evt);
            }
        });
        menuServicos.add(jmiCadastrarServico);

        jmiGerenciarServicos.setText("Gerenciar Servi√ßos");
        jmiGerenciarServicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiGerenciarServicosActionPerformed(evt);
            }
        });
        menuServicos.add(jmiGerenciarServicos);

        jmiCadastrarTipoServico.setText("Cadastrar Tipo de Servi√ßo");
        jmiCadastrarTipoServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCadastrarTipoServicoActionPerformed(evt);
            }
        });
        menuServicos.add(jmiCadastrarTipoServico);

        jmiGerenciarTiposServicos.setText("Gerenciar Tipos de Servi√ßos");
        jmiGerenciarTiposServicos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiGerenciarTiposServicosActionPerformed(evt);
            }
        });
        menuServicos.add(jmiGerenciarTiposServicos);

        menuServicosEProdutos.add(menuServicos);

        menuProdutos.setText("Produtos");

        jmiCadastrarProduto.setText("Cadastrar Produto");
        jmiCadastrarProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCadastrarProdutoActionPerformed(evt);
            }
        });
        menuProdutos.add(jmiCadastrarProduto);

        jmiGerenciarProdutos.setText("Gerenciar Produtos");
        jmiGerenciarProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiGerenciarProdutosActionPerformed(evt);
            }
        });
        menuProdutos.add(jmiGerenciarProdutos);

        jmiCadastrarTipoProduto.setText("Cadastrar Tipo de Produto");
        jmiCadastrarTipoProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCadastrarTipoProdutoActionPerformed(evt);
            }
        });
        menuProdutos.add(jmiCadastrarTipoProduto);

        jmiGerenciarTiposProdutos.setText("Gerenciar Tipos de Produtos");
        jmiGerenciarTiposProdutos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiGerenciarTiposProdutosActionPerformed(evt);
            }
        });
        menuProdutos.add(jmiGerenciarTiposProdutos);

        menuServicosEProdutos.add(menuProdutos);

        menuBar.add(menuServicosEProdutos);

        menuAjuda.setMnemonic('A');
        menuAjuda.setText("Ajuda");

        jmiSobre.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
        jmiSobre.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/info.png"))); // NOI18N
        jmiSobre.setMnemonic('S');
        jmiSobre.setText("Sobre");
        menuAjuda.add(jmiSobre);

        menuBar.add(menuAjuda);

        setJMenuBar(menuBar);

        bindingGroup.bind();

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void initCalendar() {
        // Pegando as informa√ß√µes do calendario
        GregorianCalendar cal = new GregorianCalendar(new Locale("pt", "BR")); // Criando o calendario BR
        realDay = cal.get(GregorianCalendar.DAY_OF_MONTH); // Pegando o dia atual
        realMonth = cal.get(GregorianCalendar.MONTH); // Pegando o mes atual
        realYear = cal.get(GregorianCalendar.YEAR); // Pegando o ano atual
        currentMonth = realMonth;
        currentYear = realYear;
        
        // Atualizando o calendario
        refreshCalendar(realMonth, realYear);
    }
        
    private void refreshCalendar(int month, int year) {
        // Atualizando o texto do mes e do ano
        jlMes.setText(MONTHS[month] + " de " + year); //Refresh the month label (at the top)
        
        // Limpando a tabela
        for (int i = 0; i < 6; i++){
            for (int j = 0; j < 7; j++){
                jtCalendario.setValueAt(null, i, j);
            }
        }
        
        // Limpando a sele√ß√£o
        jtCalendario.clearSelection();
        
        // Pegando o primeiro dia do mes e o n√∫mero de dias do mes
        GregorianCalendar cal = new GregorianCalendar(year, month, 1);
        int nod = cal.getActualMaximum(GregorianCalendar.DAY_OF_MONTH);
        int som = cal.get(GregorianCalendar.DAY_OF_WEEK);
        
        // Preenchendo a tabela
        for (int i = 1; i <= nod; i++){
            int row = (i + som - 2) / 7;
            int column = (i + som - 2) % 7;
            jtCalendario.setValueAt(" " + i, row, column);
        }
        
        // Renderizando a tabela
        calendarRenderer = new CalendarioRenderer(realDay, realMonth, realYear, month, year);
        jtCalendario.setDefaultRenderer(jtCalendario.getColumnClass(0), calendarRenderer);
    }
    
    private void refreshConsultasDoDia(Object value, boolean validDay) {
        if (validDay) {
            if (pressedValue != releasedValue) {
                consultasDoDia.clear();
                jtConsultas.setEnabled(true);
                GregorianCalendar calendario = new GregorianCalendar(currentYear, currentMonth, Integer.valueOf(value.toString().trim()));
                int diaAtual = calendario.get(Calendar.DAY_OF_YEAR);
                int anoAtual = calendario.get(Calendar.YEAR);
                GregorianCalendar dia = new GregorianCalendar();
                for (Consulta c : consultas) {
                    dia.setTime(c.getHoraInicial());
                    if (diaAtual == dia.get(Calendar.DAY_OF_YEAR) && anoAtual == dia.get(Calendar.YEAR)) {
                        consultasDoDia.add(c);
                    }
                }
                Collections.sort(consultasDoDia);
            }
        } else {
            jtConsultas.setEnabled(false);
            consultasDoDia.clear();
        }
    }
    
    private void jmiSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSairActionPerformed
        if (JOptionPane.showConfirmDialog(this, "Deseja realmente sair?", "Confirma√ß√£o", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_jmiSairActionPerformed

    private void jbtnMesAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnMesAnteriorActionPerformed
        if (currentMonth == 0) {
            currentMonth = 11;
            currentYear -= 1;
        } else{
            currentMonth -= 1;
        }
        refreshCalendar(currentMonth, currentYear);
    }//GEN-LAST:event_jbtnMesAnteriorActionPerformed

    private void jbtnProximoMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnProximoMesActionPerformed
        if (currentMonth == 11) {
            currentMonth = 0;
            currentYear += 1;
        } else {
            currentMonth += 1;
        }
        refreshCalendar(currentMonth, currentYear);
    }//GEN-LAST:event_jbtnProximoMesActionPerformed

    private void jbtnHojeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnHojeActionPerformed
        currentMonth = realMonth;
        currentYear = realYear;
        refreshCalendar(realMonth, realYear);
    }//GEN-LAST:event_jbtnHojeActionPerformed

    private void jtCalendarioMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtCalendarioMouseReleased
        int row = jtCalendario.rowAtPoint(evt.getPoint());
        int col = jtCalendario.columnAtPoint(evt.getPoint());
        releasedValue = jtCalendario.getValueAt(row, col);
        refreshConsultasDoDia(releasedValue, releasedValue != null && !releasedValue.toString().trim().isEmpty());
    }//GEN-LAST:event_jtCalendarioMouseReleased

    private void jtCalendarioMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtCalendarioMousePressed
        int row = jtCalendario.rowAtPoint(evt.getPoint());
        int col = jtCalendario.columnAtPoint(evt.getPoint());
        pressedValue = jtCalendario.getValueAt(row, col);
        refreshConsultasDoDia(pressedValue, pressedValue != null && !pressedValue.toString().trim().isEmpty());
    }//GEN-LAST:event_jtCalendarioMousePressed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (JOptionPane.showConfirmDialog(this, "Deseja realmente sair?", "Confirma√ß√£o", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosing

    private void jbtnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnExcluirActionPerformed
        if (JOptionPane.showConfirmDialog(this, "Deseja realmente apagar esta consulta?", "Confirma√ß√£o", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
            try {
                Consulta c = consultasDoDia.get(jtConsultas.getSelectedRow());
                DAO.destroy(c);
                consultasDoDia.remove(c);
                consultas.remove(c);
            } catch (Exception e) {
                Logger.save(e);
                JOptionPane.showMessageDialog(this, "N√£o foi poss√≠vel apagar a consulta!", "Erro Interno", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_jbtnExcluirActionPerformed

    private void jbtnNovaConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnNovaConsultaActionPerformed
        // Verificando se o valor selecionado √© valido
        int row = jtCalendario.getSelectedRow();
        int col = jtCalendario.getSelectedColumn();
        if (row < 0 || col < 0 || jtCalendario.getValueAt(row, col) == null) {
            JOptionPane.showMessageDialog(this, "Selecione uma data no calendario!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Pegando o dia selecionado e a data selecionada
        Integer currentDay = Integer.parseInt(jtCalendario.getValueAt(row, col).toString().trim());
        Date data = new GregorianCalendar(currentYear, currentMonth, currentDay).getTime();

        new DialogoSalvarConsulta(this, true, (c) -> {
            consultasDoDia.add(getIndex(c), c);
            consultas.add(c);
        }, data).setVisible(true);
    }//GEN-LAST:event_jbtnNovaConsultaActionPerformed

    private int getIndex(Consulta c) {
        for (int i = 0; i < consultasDoDia.size(); i++) {
            if (consultasDoDia.get(i).getHoraInicial().getTime() > c.getHoraInicial().getTime()) {
                return i;
            }
        }
        return consultasDoDia.size();
    }
    
    private void jbtnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnEditarActionPerformed
        try {
        new DialogoSalvarConsulta(this, true, (c) -> {
            consultasDoDia.remove(jtConsultas.getSelectedRow());
            consultasDoDia.add(getIndex(c), c);
        }, consultasDoDia.get(jtConsultas.getSelectedRow())).setVisible(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jbtnEditarActionPerformed

    private void jbtnInfoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtnInfoActionPerformed
        new DialogoVisualizarConsulta(this, true, consultasDoDia.get(jtConsultas.getSelectedRow())).setVisible(true);
    }//GEN-LAST:event_jbtnInfoActionPerformed

    private void jmiConsultaClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiConsultaClienteActionPerformed
        new DialogoConultarHistoricoDoCliente(this, true).setVisible(true);
    }//GEN-LAST:event_jmiConsultaClienteActionPerformed

    private void jmiCadastrarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCadastrarClienteActionPerformed
        new DialogoSalvarCliente(this, true, null).setVisible(true);
    }//GEN-LAST:event_jmiCadastrarClienteActionPerformed

    private void jmiCadastrarConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCadastrarConsultaActionPerformed
        jbtnNovaConsultaActionPerformed(null);
    }//GEN-LAST:event_jmiCadastrarConsultaActionPerformed

    private void jmiConsultarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiConsultarClienteActionPerformed
        new DialogoGerenciarClientes(this, true).setVisible(true);
    }//GEN-LAST:event_jmiConsultarClienteActionPerformed

    private void jmiGerenciarConsultasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiGerenciarConsultasActionPerformed
        new DialogoGerenciarConsultas(this, true).setVisible(true);
    }//GEN-LAST:event_jmiGerenciarConsultasActionPerformed

    private void jmiCadastrarTipoServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCadastrarTipoServicoActionPerformed
        new DialogoSalvarTipoServico(this, true, null).setVisible(true);
    }//GEN-LAST:event_jmiCadastrarTipoServicoActionPerformed

    private void jmiCadastrarTipoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCadastrarTipoProdutoActionPerformed
        new DialogoSalvarTipoProduto(this, true, null).setVisible(true);
    }//GEN-LAST:event_jmiCadastrarTipoProdutoActionPerformed

    private void jmiGerenciarTiposServicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiGerenciarTiposServicosActionPerformed
        new DialogoGerenciarTiposServicos(this, true).setVisible(true);
    }//GEN-LAST:event_jmiGerenciarTiposServicosActionPerformed

    private void jmiGerenciarTiposProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiGerenciarTiposProdutosActionPerformed
        new DialogoGerenciarTiposProdutos(this, true).setVisible(true);
    }//GEN-LAST:event_jmiGerenciarTiposProdutosActionPerformed

    private void jmiCadastrarProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCadastrarProdutoActionPerformed
        new DialogoSalvarProduto(this, true, null).setVisible(true);
    }//GEN-LAST:event_jmiCadastrarProdutoActionPerformed

    private void jmiGerenciarProdutosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiGerenciarProdutosActionPerformed
        new DialogoGerenciarProdutos(this, true).setVisible(true);
    }//GEN-LAST:event_jmiGerenciarProdutosActionPerformed

    private void jmiCadastrarServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCadastrarServicoActionPerformed
        new DialogoSalvarServico(this, true, null).setVisible(true);
    }//GEN-LAST:event_jmiCadastrarServicoActionPerformed

    private void jmiGerenciarServicosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiGerenciarServicosActionPerformed
        new DialogoGerenciarServicos(this, true).setVisible(true);
    }//GEN-LAST:event_jmiGerenciarServicosActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.util.List<Consulta> consultas;
    private java.util.List<Consulta> consultasDoDia;
    private javax.persistence.EntityManager entityManager;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JScrollPane jScrollPaneCalendario;
    private javax.swing.JScrollPane jScrollPaneConsultas;
    private javax.swing.JPopupMenu.Separator jSeparador1;
    private javax.swing.JButton jbtnEditar;
    private javax.swing.JButton jbtnExcluir;
    private javax.swing.JButton jbtnHoje;
    private javax.swing.JButton jbtnInfo;
    private javax.swing.JButton jbtnMesAnterior;
    private javax.swing.JButton jbtnNovaConsulta;
    private javax.swing.JButton jbtnProximoMes;
    private javax.swing.JLabel jlMes;
    private javax.swing.JMenuItem jmiCadastrarCliente;
    private javax.swing.JMenuItem jmiCadastrarConsulta;
    private javax.swing.JMenuItem jmiCadastrarProduto;
    private javax.swing.JMenuItem jmiCadastrarServico;
    private javax.swing.JMenuItem jmiCadastrarTipoProduto;
    private javax.swing.JMenuItem jmiCadastrarTipoServico;
    private javax.swing.JMenuItem jmiConfiguracoesDoConsultorio;
    private javax.swing.JMenuItem jmiConsultaCliente;
    private javax.swing.JMenuItem jmiConsultarCliente;
    private javax.swing.JMenuItem jmiGerenciarConsultas;
    private javax.swing.JMenuItem jmiGerenciarProdutos;
    private javax.swing.JMenuItem jmiGerenciarServicos;
    private javax.swing.JMenuItem jmiGerenciarTiposProdutos;
    private javax.swing.JMenuItem jmiGerenciarTiposServicos;
    private javax.swing.JMenuItem jmiSair;
    private javax.swing.JMenuItem jmiSobre;
    private javax.swing.JPanel jpBotoesLaterais;
    private javax.swing.JPanel jpBotoesSuperiores;
    private javax.swing.JPanel jpCalendario;
    private javax.swing.JPanel jpConsultasDoDia;
    private javax.swing.JPanel jpGeral;
    private javax.swing.JPanel jpMesDoCalendario;
    private javax.swing.JTable jtCalendario;
    private javax.swing.JTable jtConsultas;
    private javax.swing.JMenu menuAjuda;
    private javax.swing.JMenu menuArquivo;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu menuClientes;
    private javax.swing.JMenu menuConsultas;
    private javax.swing.JMenu menuProdutos;
    private javax.swing.JMenu menuServicos;
    private javax.swing.JMenu menuServicosEProdutos;
    private javax.persistence.Query queryConsultas;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
         
}